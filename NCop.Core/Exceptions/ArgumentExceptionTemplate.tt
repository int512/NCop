<#@ assembly name="EnvDTE" #>
<#@ assembly name="Microsoft.VisualStudio.Shell.11.0" #>
<#@ assembly name="Microsoft.VisualStudio.Shell.Interop" #>
<#@ import namespace="EnvDTE" #>
<#@ import namespace="Microsoft.VisualStudio.Shell" #>
<#@ import namespace="Microsoft.VisualStudio.Shell.Interop" #>
<#@ include file="NCopExceptionTemplate.tt" #><#+
public class ArgumentExceptionTemplate : NCopExceptionTemplate
{	
	private string name = System.IO.Path.GetFileNameWithoutExtension(TransformationContext.Current.Host.TemplateFile);
		
	public override string TransformText()
	{
#>
// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by NCop Copyright ©
//    Changes to this file may cause incorrect behavior and will be lost if
//    the code is regenerated.
// </auto-generated
// ------------------------------------------------------------------------------

namespace <#= Namespace ?? DefaultNamespace  #>
{	
	using System;
	using System.Runtime.Serialization;

	[Serializable]
	public class <#=  name #> : ArgumentException
	{
		private static string message = "<#= Message #>";
		
		public <#= name #>(string message = null) : base(message ?? <#=  name #>.message) { }

		public <#= name #>(Exception innerException) : this(message, innerException) { }

		public <#= name #>(string parameterName, string message = null) : base(message ?? <#=  name #>.message, parameterName) { }

		public <#= name #>(string message, Exception innerException) : base(message, innerException) { }

		protected <#= name #>(SerializationInfo info, StreamingContext context) : base(info, context) { }
	}
}
	<#+
		return this.GenerationEnvironment.ToString();
	}
}
#>