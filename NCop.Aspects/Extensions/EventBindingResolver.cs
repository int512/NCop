// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by NCop Copyright ©
//    Changes to this file may cause incorrect behavior and will be lost if
//    the code is regenerated.
// </auto-generated
// ------------------------------------------------------------------------------
namespace NCop.Aspects.Extensions
{
	using System;
	using NCop.Aspects.Engine;
	using System.Collections.Generic;

	internal static partial class EventBindingResolver
	{
		internal static readonly IDictionary<int, Type> ActionMap = null;
		internal static readonly IDictionary<int, Type> FunctionMap = null;
 
 		static EventBindingResolver() {
			FunctionMap = new Dictionary<int, Type>();
			ActionMap = new Dictionary<int, Type>();

			ActionMap.Add(0, typeof(IEventActionBinding<>));				

			ActionMap.Add(1, typeof(IEventActionBinding<,>));	
			FunctionMap.Add(1, typeof(IEventFunctionBinding<,>));	

			ActionMap.Add(2, typeof(IEventActionBinding<,,>));	
			FunctionMap.Add(2, typeof(IEventFunctionBinding<,,>));	

			ActionMap.Add(3, typeof(IEventActionBinding<,,,>));	
			FunctionMap.Add(3, typeof(IEventFunctionBinding<,,,>));	

			ActionMap.Add(4, typeof(IEventActionBinding<,,,,>));	
			FunctionMap.Add(4, typeof(IEventFunctionBinding<,,,,>));	

			ActionMap.Add(5, typeof(IEventActionBinding<,,,,,>));	
			FunctionMap.Add(5, typeof(IEventFunctionBinding<,,,,,>));	

			ActionMap.Add(6, typeof(IEventActionBinding<,,,,,,>));	
			FunctionMap.Add(6, typeof(IEventFunctionBinding<,,,,,,>));	

			ActionMap.Add(7, typeof(IEventActionBinding<,,,,,,,>));	
			FunctionMap.Add(7, typeof(IEventFunctionBinding<,,,,,,,>));	

			ActionMap.Add(8, typeof(IEventActionBinding<,,,,,,,,>));	
			FunctionMap.Add(8, typeof(IEventFunctionBinding<,,,,,,,,>));	

			FunctionMap.Add(9, typeof(IEventFunctionBinding<,,,,,,,,,>));	
		}
	}
}